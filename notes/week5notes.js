export default 
"<h3>Testing and Debugging</h3>\n<li>Three types of errors</li>\n<li>System error - error with user's external system</li>\n<li>Programmer error - incorrect syntax or faulty logic</li>\n<li>User error - data inputs invalid from user</li>\n<li>Little control over system error, and efforts should be focused on minimizing programming errors</li>\n<li>Exceptions are errors that return with a value to define the error, such as ReferenceError, meaning the term isn\’t defined</li>\n<li>Stack trace are the path of which the error occurred, such as error occurred in first function, then from main which called first function, which main is located in main.js, indicated the lines at each was called</li>\n<li>Warning, error in program that won't cause it to crash and continue running, not all browsers support warnings</li>\n<li>Using strict mode, which will cause more exceptions and warnings to aide in writing proper code, by using \‘use strict\’; at the top of JS file</li>\n<li>Strict mode can also be within functions to only run within the local function scope</li>\n<li>Linting tools are external tools to test quality of JS code, can be installed in text-editors or through npm. Several linting tools: JS Lint,JS Hint and ES Lint</li>\n<li>Lint tests are not 100% guaranteed correct but a step in the right direction</li>\n<li>Feature detection, use if statement to check if it exists before assuming itll work</li>\n<li>Alerts can be used to debug in browser, as blocks code until the user presses Ok</li>\n<li>The debugger keyword can be used to add breakpoints in the browsers Firefox, Edge, Chrome, Safari, ensure to remove debugger code in final product</li>\n<li>Error can be made into an object to have custom errors</li>\n<li>7 types of specific errors</li>\n<li>EvalError: only kept for backwards comp. used for eval() function</li>\n<li>RangeError: value is outside of acceptable values, ex. Indexing value outside of array length</li>\n<li>ReferenceError: calling object that doesn't exist</li>\n<li>SyntaxError: occurs when syntax error</li>\n<li>TypeError: error with type of value, using String method on int</li>\n<li>URIError: issue with encoding or decoding URI</li>\n<li>InteralError: issue with JS engine, most common cause is too many recursion calls</li>\n<li>Try, catch, finally can be used to catch errors safely while throwing back helpful errors</li>\n<li>External software such as Jest can be used to test functions and their results through npm</li>\n";