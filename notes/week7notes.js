const notes = ["!Transform and Transitions","Transform property can translate, rotate, adjust size of an element",
"#transform: translate(15px, 20px); //translates x 15px, y 20px","Transforms require prefixing to ensure they work across all platforms",
"Add the following to transform","#-webkit-transform: translate(x,y); //Most mobile devices\n-ms-transform: translate(x,y); //Internet explorer 9\ntransform: translate(x,y);",
"To translate in one direction: use translateX(units) or translateY(units)","scale() changes the size/proportions of the element","#scale(2) //doubles elements size",
"#scale(x,y) //stretches element x units and y units","#scale(.3, 3); //shrinks width to .3 and stretches height to 3x",
"Similar to translate, scaleX(unit), and scaleY(unit) can be used to target individually x or y",
"Rotate(unit) rotates unit by specific amount, typically degrees, however other units can be radians/turns",
"#rotate(45deg) //rotates clockwise 45 deg","#rotate(-45deg) //rotates counter clockwise 45 deg",
"skey(x,y) skews the text in 3D axis","#skew(45deg, 4deg); //skews text 45deg x axis, while y axis 4 deg",
"Similar to translate, and scale, there is skewX() and skewY()","Transform-origin allows for the change of the center of transformations through transform-origin(x, y)",
"Order is important when doing transformations","Transitions allow CSS properties to change over time, simple animations, such as a color changing to another color",
"Transitions require:\n-Beginning state, in base element\n-Ending state, such as :hover or focus\n-Transition functions in beginning state",
"Transitions require -webkit prefix without ms","transition-property: transform //defines what property is going to be transitioned",
"#transition-duration: unit; //unit can be in s(seconds), ms(milliseconds)",
"#transition-timing-function: style //most common styles are ease, linear, ease-in, ease-out, or ease-in-out",
"Transition shorthand","#transition: property duration function delay //combine all four",
"If needing to combine multiple transitions, add a second parameter to every transition such as: transition-property: transform, color;",
"Animations","#@-webit-keyframes aAnimation{}\n@keyframes aAnimation{}","Inside each keyframe is a from, and to, which can be those keywords or %",
"#@keyframes aAnimation{\n 0% {do }\n 50% {do this}\n 100% {do that}\n}\n@keyframes aAnimation{\n from {do }\n to {do that}\n}",
"#animation-name: name //assigns the animation to the element","#animation-duration: time; //assigns how long the animation will take to go from 0 to 100%",
"#animation-timing-function: style; //similar to transition's function there is similar styles",
"#animation-iteration-count: x; //default is 1, defines how many times animation will play",
"#animation-direction: style; //normal, reverse, alternate, alternate-reverse",
"#animation-delay: time; //defines how much time before animation starts",
"#animation: time, style, direction, delay, name //animation shorthand"];

export default notes; 